name: Library Builds for Linux compilers

on:
    workflow_dispatch:
        inputs:
            library:
                description: 'Library'
                default: 'all'
                required: true
            compiler:
                description: 'Compiler'
                default: 'popular-compilers-only'
                required: true
    workflow_call:
        inputs:
            library:
                description: 'Library'
                default: 'all'
                required: true
                type: string
            compiler:
                description: 'Compiler'
                default: 'popular-compilers-only'
                required: true
                type: string

jobs:
    librarybuild:
      runs-on: ['lin-builder']
      timeout-minutes: 720

      steps:
      - name: Extract language and library name
        id: extract
        run: |
          LIBRARY="${{ inputs.library }}"

          # Extract language and library name based on path prefix
          if [[ "$LIBRARY" == libraries/fortran/* ]]; then
            LANGUAGE="fortran"
            LIBRARY_NAME="${LIBRARY#libraries/fortran/}"
          elif [[ "$LIBRARY" == libraries/rust/* ]]; then
            LANGUAGE="rust"
            LIBRARY_NAME="${LIBRARY#libraries/rust/}"
          elif [[ "$LIBRARY" == libraries/c++/* ]]; then
            LANGUAGE="c++"
            LIBRARY_NAME="${LIBRARY#libraries/c++/}"
          else
            # Default to c++ for backward compatibility
            LANGUAGE="c++"
            LIBRARY_NAME="$LIBRARY"
          fi

          echo "language=$LANGUAGE" >> $GITHUB_OUTPUT
          echo "library_name=$LIBRARY_NAME" >> $GITHUB_OUTPUT
          echo "Detected language: $LANGUAGE, library: $LIBRARY_NAME"

      - name: Download build script
        run: curl -sL "https://raw.githubusercontent.com/compiler-explorer/infra/refs/heads/main/init/start-builder.sh" -o "/tmp/start-builder.sh"

      - name: Build libraries
        run: cd /tmp && chmod +x start-builder.sh && ./start-builder.sh "${{ secrets.CONAN_PASSWORD }}" "${{ steps.extract.outputs.language }}" "${{ steps.extract.outputs.library_name }}" "${{ inputs.compiler }}"
