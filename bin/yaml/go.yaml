compilers:
  go:
    golang:
      type: tarballs
      compression: gz
      url: https://storage.googleapis.com/golang/go{{name}}.linux-amd64.tar.gz
      check_env:
        - GOROOT=%PATH%/go
      check_exe: go/bin/go version
      dir: golang-{{name}}
      create_untar_dir: true
      strip: true
      after_stage_script:
        - "export GOROOT=$(pwd)/go"
        - "[[ $(go/bin/go version) =~ go([0-9]+)\\.([0-9]+) ]] && (( BASH_REMATCH[1] < 1 || ( BASH_REMATCH[1] == 1 && BASH_REMATCH[2] < 20 ) )) && exit 0"
        - "go/bin/go tool dist list | while IFS=/ read -r goos goarch; do echo \"Populating build cache for ${goos}/${goarch}\"; GOOS=${goos} GOARCH=${goarch} go/bin/go build std; done"
      targets:
        - "1.4.1"
        - "1.7.2"
        - "1.8.5"
        - "1.8.7"
        - "1.9.2"
        - "1.9.4"
        - "1.10"
        - "1.10.1"
        - "1.11"
        - "1.12"
        - "1.13"
        - "1.14"
        - "1.15"
        - "1.16"
        - "1.17"
        - "1.18"
        - "1.19"
        - "1.20"
        - "1.21.13"
        - "1.22.12"
        - "1.23.8"
        - "1.24.2"
    tinygo:
      type: tarballs
      compression: gz
      url: https://github.com/tinygo-org/tinygo/releases/download/v{{name}}/tinygo{{name}}.linux-amd64.tar.gz
      check_exe: bin/tinygo version
      dir: tinygo-{{name}}
      untar_dir: tinygo
      targets:
        - "0.37.0"
    nightly:
      if: nightly
      type: nightly
      golang:
        check_env:
          - GOROOT=%PATH%
        check_exe: bin/go version
        targets:
          - compiler_name: go-trunk
            name: trunk
            symlink: go-tip
        after_stage_script:
          - "export GOROOT=$(pwd)/go"
          - "[[ $(go/bin/go version) =~ go([0-9]+)\\.([0-9]+) ]] && (( BASH_REMATCH[1] < 1 || ( BASH_REMATCH[1] == 1 && BASH_REMATCH[2] < 20 ) )) && exit 0"
          - "go/bin/go tool dist list | while IFS=/ read -r goos goarch; do echo \"Populating build cache for ${goos}/${goarch}\"; GOOS=${goos} GOARCH=${goarch} go/bin/go build std; done"
