compilers:
  swift:
    type: tarballs
    compression: gz
    dir: swift-{{name}}
    create_untar_dir: true
    strip_components: 1
    build: swift-{{name}}-release
    toolchain: swift-{{name}}-RELEASE
    check_exe: usr/bin/swiftc --version
    after_stage_script:
      # work around insane installation issue
      - chmod og+r ./usr/lib/swift/CoreFoundation/*
    older:
      url: https://download.swift.org/{{build}}/ubuntu1604/{{toolchain}}/{{toolchain}}-ubuntu16.04.tar.gz
      targets:
        - 3.1.1
        - 4.0.2
        - 4.0.3
        - '4.1'
        - 4.1.1
        - 4.1.2
        - '4.2'
        - '5.0'
        - '5.1'
        - '5.2'
        - '5.3'
    newer:
      url: https://download.swift.org/{{build}}/ubuntu2004/{{toolchain}}/{{toolchain}}-ubuntu20.04.tar.gz
      targets:
          - '5.4'
          - '5.5'
          - '5.6'
          - '5.7'
          - '5.8'
          - '5.9'
          - '5.10'
          - '6.0.3'
          - '6.1'
    static-sdk:
      url: https://download.swift.org/{{build}}/static-sdk/{{toolchain}}/{{toolchain}}_static-linux-0.0.1.artifactbundle.tar.gz
      dir: swift-{{name}}-static-sdk
      strip_components: 2
      check_file: 'swift-linux-musl/swift-sdk.json'
      check_exe: '' # No compiler binary to check
      after_stage_script: '' # Don't need the CoreFoundation workaround
      targets:
          - '6.0.3'
          - '6.1'
    nightly:
      if: nightly
      type: restQueryTarballs
      install_always: true
      toolchain: development
      url: https://download.swift.org/{{toolchain}}/ubuntu2004/latest-build.yml
      query: |
        'https://download.swift.org/{{toolchain}}/ubuntu2004' \
        + '/' + document['dir'] \
        + '/' + document['download']
      targets:
        - nightly
      dev-snapshot:
        dir: swift-dev-snapshot
        toolchain: swift-{{name}}-branch
        targets:
          - '6.2'
